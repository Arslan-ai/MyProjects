# Our board code which displays in every move


def display_board(board):


    
    print('   |   |')
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])
    print('   |   |')
    
# Players Choice that refers its input
def player_input():
    
    marker = " "

    while not (marker == "X" or marker == "O"):
        
        marker =input("Choose X or O")
        

        
        if marker == "X":
            return ("X","O")
        
        if marker == "O":
            return ("O","X")
        
        if marker.isdigit() == True:
            print("dont enter digit")
            
        if marker != ["X","O"]:
            print("Choose O or X")
    
# Players choosed position which overwrite current input


def place_marker(board,marker,position):
    
    board[int(position)] = marker
   
# We are checking if someone won the game   

def win_check(board,mark):
    
    return ((board[7] == mark and board[8] == mark and board[9] == mark) or # across the top
    (board[4] == mark and board[5] == mark and board[6] == mark) or # across the middle
    (board[1] == mark and board[2] == mark and board[3] == mark) or # across the bottom
    (board[7] == mark and board[4] == mark and board[1] == mark) or # down the middle
    (board[8] == mark and board[5] == mark and board[2] == mark) or # down the middle
    (board[9] == mark and board[6] == mark and board[3] == mark) or # down the right side
    (board[7] == mark and board[5] == mark and board[3] == mark) or # diagonal
    (board[9] == mark and board[5] == mark and board[1] == mark)) # diagonal



# In this code we are choosing which player will start first.

import random

def choose_first():
    
    
    if random.randint(0,1) == 0:
        return "Player 1"
    else:
        return "Player 2"
    
    
    
# We are checking if the position is empty or not
    
def space_check(board,position):
    

    
    
    #### I tried to made in this way but I couldnt fix it so change it with a simplier code, if someone understands why else: return doesnt work please text me
   # for position in range(1,10):
    
     #   if board[int(position)] != " ":
     #       return False
    #    else:
     #       return True
    return board[int(position)] == ' '
   
# If the board doesnt have any empty space, this code tells it.

def full_board_check(board):
    
    
    
    for i in range(1,10):
        if space_check(board,i):
            return False
#       else:
#            return True    
    return True
    
# This function enables selecting position at range and there is no a sign on it
 
def player_choice(board):
    
    position = 0
    
    while int(position) not in range(1,10) or space_check(board, position):
        
        position = input("Select your position (1-9): ")

        if int(position) not in range(1,10):
            
            print("Chooooose in range")
        else:
            
            return position
    
    
# This function asks if users want to play again or not

def replay():
    
    
    replay = " "
    while replay != ["Yes","No"]:
        
        replay = input("Keep playing? Yes or No")
        
        if replay != ["Yes","No"]:
            
            print("Choose Yes or No")
            break
        else:
            return replay
      
# This nested function connects all functions and creates the game 


print("Welcome to Tic Tac Toe!")
    
while True:
    #Reset the board
    board = [" "]*10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    
    print(turn + "will go first.")
    
    play_game = input("Are you ready to play? Enter Yes or No")
    
    if play_game.lower()[0] == "y":
        game_on = True
    else:
        game_on = False
    
    while game_on:
        
        if turn == "Player 1":
            display_board(board)
            position = player_choice(board)
            place_marker(board, player1_marker, position)
            
            if win_check(board, player1_marker):
                display_board(board)
                print("Congs you won")
                game_on = False
        
            else:
                if full_board_check(board):
                    display_board(board)
                    print("draw")
                    
                    break
                else:
                    turn = "Player 2"
        else:
            #player 2's turn
            display_board(board)
            position = player_choice(board)
            place_marker(board,player2_marker, position)
            
            if win_check(board,player2_marker):
                display_board(board)
                print("Player 2 won")
                game_on = False
            else:
                if full_board_check(board):
                    display_board(board)
                    print("Draw")
                    break
                else:
                    turn = "Player 1"
                    
    if not replay():
        break
        
 
